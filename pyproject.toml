[tool.poetry]
name = "litestar-offline-docs"
version = "1.0.1"
description = "Offline API docs for Litestar"
authors = ["community-of-python"]
readme = "README.md"
packages = [{ include = "litestar_offline_docs" }]
include = [{ path = "static/*.*" }]

[tool.poetry.dependencies]
python = "^3.9"
litestar = { version = "2.9.1", extras = ["standard"] }


[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
anyio = "^4.4.0"
pre-commit = "^3.5.0"
pytest-xdist = "^3.6.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["litestar_offline_docs", "tests"]
python_version = "3.9"
strict = true
ignore_missing_imports = true
pretty = true
show_error_codes = true
implicit_reexport = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = true
disable_error_code = "attr-defined,valid-type"
disallow_subclassing_any = false
disallow_untyped_decorators = false

[tool.ruff]
target-version = "py39"
line-length = 120

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "EM",
    "FBT",
    "TRY003",
    "D1",
    "D106",
    "D203",
    "D213",
    "G004",
    "FA",
    "ANN101",
    "ANN102",
    "COM812",
    "ISC001",
]

[tool.ruff.lint.isort]
no-lines-before = ["standard-library", "local-folder"]
known-third-party = []
known-local-folder = []
lines-after-imports = 2

[tool.ruff.lint.extend-per-file-ignores]
"tests/*.py" = ["S101", "S311"]

[tool.coverage.report]
exclude_also = ["if typing.TYPE_CHECKING:", 'class \w+\(typing.Protocol\):']
omit = ["tests/*"]

[tool.pytest.ini_options]
addopts = '--cov=. -p no:warnings --cov-report term-missing'
